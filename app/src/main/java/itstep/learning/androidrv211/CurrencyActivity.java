package itstep.learning.androidrv211;

import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
import androidx.core.view.WindowInsetsCompat.Type;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.IOException;
import java.net.URL;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class CurrencyActivity extends AppCompatActivity {
    private static final String nbuRatesUrl = "https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json";
    private TextView tvContainer;
    private ExecutorService pool;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_currency);

        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        tvContainer = findViewById(R.id.text_rates);
        pool = Executors.newFixedThreadPool(3);
        pool.submit(this::loadRates);
    }

    private void loadRates() {
        try {
            URL url = new URL(nbuRatesUrl);
            InputStream urlStream = url.openStream();
            ByteArrayOutputStream byteBuilder = new ByteArrayOutputStream();
            byte[] buffer = new byte[8192];
            int len;

            while ((len = urlStream.read(buffer)) > 0) {
                byteBuilder.write(buffer, 0, len);
            }

            String json = byteBuilder.toString(StandardCharsets.UTF_8.name());
            urlStream.close();

            Gson gson = new Gson();
            TypeToken<List<CurrencyRateNbu>> token = new TypeToken<List<CurrencyRateNbu>>() {};
            List<CurrencyRateNbu> rates = gson.fromJson(json, token.getType());

            // üî† –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É (–ø–æ txt)
            rates.sort(Comparator.comparing(rate -> rate.txt));

            // üßæ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥
            StringBuilder sb = new StringBuilder();
            for (CurrencyRateNbu rate : rates) {
                sb.append("üí± ")
                        .append(rate.txt)
                        .append(" (").append(rate.cc).append("): ")
                        .append(String.format("%.2f –≥—Ä–Ω", rate.rate))
                        .append(" üìÖ ").append(rate.exchangedate)
                        .append("\n\n");
            }

            runOnUiThread(() -> tvContainer.setText(sb.toString()));

        } catch (MalformedURLException ex) {
            Log.d("loadRates", "MalformedURLException " + ex.getMessage());
        } catch (IOException ex) {
            Log.d("loadRates", "IOException " + ex.getMessage());
            runOnUiThread(() -> tvContainer.setText("–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è: " + ex.getMessage()));
        }
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        pool.shutdown();
    }
}
/*
 ================================
 üì° –ú–µ—Ä–µ–∂–µ–≤–∞ —Ä–æ–±–æ—Ç–∞ –≤ Android
 ================================

üî∏ Android –ù–ï –¥–æ–∑–≤–æ–ª—è—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –º–µ—Ä–µ–∂–µ—é —É –≥–æ–ª–æ–≤–Ω–æ–º—É (UI) –ø–æ—Ç–æ—Ü—ñ ‚Äî
—Ü–µ –≤–∏–∫–ª–∏–∫–∞—î –ø–æ–º–∏–ª–∫—É:
‚ùå android.os.NetworkOnMainThreadException

üìå –†—ñ—à–µ–Ω–Ω—è:
–ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –º–µ—Ä–µ–∂–µ–≤—ñ –∑–∞–ø–∏—Ç–∏ —É —Ñ–æ–Ω–æ–≤–∏—Ö –ø–æ—Ç–æ–∫–∞—Ö:
- new Thread(() -> ...)
- ExecutorService (ThreadPool)
- Coroutine (—É Kotlin)
- –∞–±–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏: Retrofit, Volley —Ç–æ—â–æ.

--------------------------------------------------
üîí –î–æ–∑–≤–æ–ª–∏ (Permissions)
--------------------------------------------------
–î–µ—è–∫—ñ –¥—ñ—ó –≤ Android –≤–∏–º–∞–≥–∞—é—Ç—å –¥–æ–∑–≤–æ–ª—ñ–≤ (permissions), –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ ‚Äî –¥–æ—Å—Ç—É–ø –¥–æ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—É.

‚ùó –ü–æ–º–∏–ª–∫–∞:
java.lang.SecurityException: Permission denied

üìå –†—ñ—à–µ–Ω–Ω—è:
–í AndroidManifest.xml –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏:
<uses-permission android:name="android.permission.INTERNET" />

--------------------------------------------------
‚ö†Ô∏è –Ü–Ω—à–∞ –ø–æ—à–∏—Ä–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞:
--------------------------------------------------
android.view.ViewRootImpl$CalledFromWrongThreadException

‚ùó –ü—Ä–∏—á–∏–Ω–∞:
–°–ø—Ä–æ–±–∞ –∑–º—ñ–Ω–∏—Ç–∏ UI (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, TextView.setText(...)) –∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫—É.

üìå –†—ñ—à–µ–Ω–Ω—è:
–û–Ω–æ–≤–ª—é–≤–∞—Ç–∏ UI —Ç—ñ–ª—å–∫–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ:

runOnUiThread(() -> {
    myTextView.setText("–†–µ–∑—É–ª—å—Ç–∞—Ç");
});

--------------------------------------------------
üß† –ü—ñ–¥—Å—É–º–æ–∫:
--------------------------------------------------
1Ô∏è‚É£ –£—Å—ñ –º–µ—Ä–µ–∂–µ–≤—ñ –∑–∞–ø–∏—Ç–∏ ‚Äî –ª–∏—à–µ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ!
2Ô∏è‚É£ –î–æ—Å—Ç—É–ø –¥–æ UI ‚Äî —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ runOnUiThread()
3Ô∏è‚É£ –ù–µ –∑–∞–±—É–≤–∞–π –¥–æ–∑–≤–æ–ª–∏ –≤ AndroidManifest.xml
4Ô∏è‚É£ –ö—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ ExecutorService –∞–±–æ Retrofit/OkHttp
*/